
# 在 DAO 中使用 jdbcTemplate
	一般情况下都是在 DAO 类使用 jdbcTemplate, jdbcTemplate在 XML 配置文件中配置好后，直接在 DAO 中注入即可。

	// .xml
	<context:component-scan base-package="com.smart" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/spring" p:username="root"
		p:password="123456" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />
		
	/*
		jdbcTemplate 其它属性:
		queryTimeout	0		
			设置 JdbcTemplate 所创建的Statement 查询数据时的最大超时时间。默认为0，表示使用底层 JDBC 驱动程序的默认设置
		
		fetchSize		0
			设置底层的ResultSet 每次从数据库返回的行数。该属性对程序的性能影响很大，如果设置过大 一次性载入的数据都放到内存中，所以内存的消耗很大。反之过小从数据库读取的次数将增大，也会影响性能。
			默认为0，表示使用底层 JDBC 驱动程序的默认设置
			Oracle 驱动程序的 fetchSize 的默认值为 10
		
		maxRows			0
			设置底层的 ResultSet 从数据库返回的最大行数
		
		ignoreWarnings	true
			是否忽略 SQL 的警告信息， 默认为true ,即所有的警告信息都被记录到日志中，
			如果为false，则 JdbcTemplate 将抛出 SQLWarningException
		
	*/
		
		
	// 声明一个 DAO 类
	@Repository
	public class ForumDao{
		// ... 
		@Autowired
		public void setJdbcTemplate(JdbcTemplate jdbcTemplate){
			this.jdbcTemplate = jdbcTemplate;
		}
		
		public void initDb(){
			jdbcTemplate.excute(sql);
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	