

# web.xml 
	<?xml version="1.0" encoding="UTF-8"?>
	<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://java.sun.com/xml/ns/javaee"
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		id="WebApp_ID" version="3.0">
		...
	</web-app>

. 默认路径	
	<welcome-file-list>
		<welcome-file>index</welcome-file>
	</welcome-file-list>
		
		
. 配置监听器
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	
. 业务层和持久层的Spring 配置文件，这些配置文件被父Spring 容器所使用
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:application-context.xml</param-value>
	</context-param>
		
		
. 中央控制器
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 默认是 /WEB-INF 文件夹下 springmvc-servlet.xml (<servlet-Name>-servlet.xml) -->
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		
		/*
		<!-- 布尔类型的属性。 决定是否将 WebApplicationContext 发布到 ServletContext 中，
			如果容器中没有任何时间监听器，可以设置为false，一边提高运行性能
			默认为true
			-->
		<init-param>
			<param-name>publishContext</param-name>
			<param-value>true</param-value>
		</init-param>
		
		<!-- 布尔类型的属性。当 DispatcherServlet 处理完一个请求后，是否需要向容器发布一个 ServletRequestHandledEvent事件
			默认为true
			-->
		<init-param>
			<param-name>publishEvents</param-name>
			<param-value>true</param-value>
		</init-param>
		
		*/
		
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	
. servlet 映射
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
. 静态资源过滤
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping> 
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	
		
. 配置Spring提供的字符编码过滤器
	<filter>
		<filter-name>SpringCharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SpringCharacterEncodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	