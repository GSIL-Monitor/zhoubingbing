// Item --------------------------------
ion-item-group 当用到 ion-item-divider 时需要 使用ion-item-group 替代 ion-list


ion-list-header
ion-item-divider 带有背景颜色的 分频器
ion-item
[ion-item]

<ion-item> Item </ion-item>
As an Attribute: <a ion-item href="https://www.ionicframework.com"> Anchor Item </a>

<ion-item detail-push>  [detail-push] 向ion-item 添加向右剪头
<ion-item detail-none>  [detail-none] 隐藏 ion-item 向右剪头

# ion-item子元素 位置
Attribute		Description
	item-start		Placed to the left of all other elements, outside of the inner item.
	item-end		Placed to the right of all other elements, inside of the inner item, outside of the input wrapper.
	item-content	Placed to the right of any ion-label, inside of the input wrapper.

	.在 <ion-item> </ion-item> 中使用 Checkboxes, Radios and Toggles
		复选框与 item-start 属性位于相同的位置 <ion-checkbox ></ion-checkbox> 默认添加 item-start
		Radios and Toggles  与 item-end 属性位于相同的位置 默认添加 item-end

	.在 <ion-item> </ion-item> 中使用 Inputs // Select, Input, TextArea, DateTime, and Range.
		Select, Input, TextArea, DateTime, and Range 与 item-content 属性位于相同的位置 默认添加 item-content
		
		
 // 常用 --------------------------------------------------------
		
<ion-item>
	<ion-avatar item-start>
		<img src="assets/img/nin-live.png">
	</ion-avatar>
	Avatar Item
	<button ion-button outline item-end>View</button>
</ion-item>

<ion-item>
	<h2>Item</h2>
	<p>Item Paragraph</p>
	<ion-thumbnail item-end>
		<img src="assets/img/nin-live.png">
	</ion-thumbnail>
	</ion-item>
	

// Note --------------------------------------------------------
ion-note

ion-note 是 ion-item 的成员它创建可以在项目的左侧或右侧的灰色元素。

<ion-item>
	<ion-note item-start>
		Left Note
	</ion-note>
	My Item
	<ion-note item-end>
		Right Note
	</ion-note>
</ion-item>


	
	
// ItemOptions --------------------------------------------------------

<ion-item-sliding> </ion-item-sliding> 用于设置向左向右 拖拽
<ion-item-options> </ion-item-options> 设置拖拽出来的选项

<ion-item-sliding>
	<ion-item>
		Item 1
	</ion-item>
	<ion-item-options side="right" (ionSwipe)="saveItem(item)">
		<button ion-button expandable (click)="saveItem(item)">
			<ion-icon name="star"></ion-icon>
		</button>
	</ion-item-options>
</ion-item-sliding>


Input 		Properties
	Attr		Type		Details
	side		string		right ｜ left ; Default  right

Output 		Events
	Attr		Details
	ionSwipe	Emitted when the item has been fully swiped.


// ItemSliding --------------------------------------------------------

<ion-item-sliding> </ion-item-sliding> 用于设置向左向右 拖拽

<ion-list>
  <ion-item-sliding #item>
    <ion-item>
      Item
    </ion-item>
    <ion-item-options side="left">
      <button ion-button (click)="favorite(item)">Favorite</button>
      <button ion-button color="danger" (click)="share(item)">Share</button>
    </ion-item-options>

    <ion-item-options side="right">
      <button ion-button (click)="unread(item)">Unread</button>
    </ion-item-options>
  </ion-item-sliding>
</ion-list>

Instance Members
close()

Output 		Events
	Attr		Details
	ionDrag		Emitted when the sliding position changes. It reports the relative position		 // <ion-item-sliding (ionDrag)="logDrag($event)">
	ionSwipe

Output Events
Attr	Details
ionDrag	Emitted when the sliding position changes. It reports the relative position.



# 拖动排序 ItemReorder -----------------------------------------

<ion-list reorder="true"> <ion-item-group reorder="true">  

reorder="true"	// 用于给 ion-item 拖动排序

// $event 对象中有 from 和 to 属性 分别是 拖动排序前后的 index 值
<ion-item-group reorder="true" (ionItemReorder)="reorderItems($event)">
    <ion-item *ngFor="let item of items">{{ item }}</ion-item>
</ion-item-group>


reorderItems(indexes) {
    let element = this.items[indexes.from];
    this.items.splice(indexes.from, 1);
    this.items.splice(indexes.to, 0, element);
}

Input 	Properties
	Attr	Type		Details
	side	string		Which side of the view the ion-reorder should be placed. Default "end".

Output Events
	Attr				Details
	ionItemReorder		Emitted when the item is reordered. Emits an object with from and to properties.

	

Sass Variables

Property	Default	Description
$item-ios-body-text-font-size	1.7rem	Font size of the item text

$item-ios-paragraph-margin-top	0	Margin top of the item paragraph

$item-ios-paragraph-margin-end	0	Margin end of the item paragraph

$item-ios-paragraph-margin-bottom	2px	Margin bottom of the item paragraph

$item-ios-paragraph-margin-start	$item-ios-paragraph-margin-end	Margin start of the item paragraph

$item-ios-paragraph-font-size	1.4rem	Font size of the item paragraph

$item-ios-paragraph-text-color	#8e9093	Color of the item paragraph

$item-ios-avatar-size	36px	Size of the avatar in the item

$item-ios-avatar-border-radius	50%	Border radius of the avatar in the item

$item-ios-thumbnail-size	56px	Size of the thumbnail in the item

$item-ios-detail-push-show	true	Shows the detail arrow icon on an item

$item-ios-detail-push-color	$list-ios-border-color	Color of the detail arrow icon

$item-ios-detail-push-svg	"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 20'><path d='M2,20l-2-2l8-8L0,2l2-2l10,10L2,20z' fill='#{$item-ios-detail-push-color}'/></svg>"	
Icon for the detail arrow

$item-ios-divider-background	#f7f7f7	Background for the divider

$item-ios-divider-color	#222	Color for the divider

$item-ios-sliding-content-background	$list-ios-background-color	Background for the sliding content
	