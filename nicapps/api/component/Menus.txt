
在根页面创建

//菜单
<ion-menu [content]="mycontent">
<ion-content>
	<ion-list>
	
		<button ion-item (click)="openPage(homePage)">
			Home
		</button>
		
		<button ion-item (click)="openPage2(friendsPage)">
			Friends
		</button>
		
	</ion-list>
</ion-content>
</ion-menu>

//页面
<ion-nav #mycontent [root]="rootPage"></ion-nav>
  

// in NgModules 设置默认值
imports: [
	IonicModule.forRoot(MyApp,{
		menuType: 'push',
		platforms: {
			ios: {
				menuType: 'overlay',
			}
		}
	})
],


Input Properties
Attr		Type		Details
content		any			A reference to the content element the menu should use.
enabled		boolean		If true, the menu is enabled. Default true.
id			string		An id for the menu.
persistent	boolean		If true, the menu will persist on child pages.
side		string		Which side of the view the menu should be placed. Default "left".
swipeEnabled	boolean	If true, swiping the menu is enabled. Default true.
type	string	The display type of the menu. Default varies based on the mode, see the menuType in the config. Available options: "overlay", "reveal", "push".


Output Events:
Attr		Details
ionClose	Emitted when the menu has been closed.
ionDrag		Emitted when the menu is being dragged open.
ionOpen		Emitted when the menu has been opened.


// MenuClose

<button ion-button menuClose>Close Menu</button>
<button ion-button menuClose="left">Close Left Menu</button>

// MenuToggle
<button ion-button menuToggle>Toggle Menu</button>
<button ion-button menuToggle="right">Toggle Right Menu</button>



// MenuController

import { MenuController } from 'ionic-angular';

	constructor(public menuCtrl: MenuController) {}
	
	openMenu() {
	   this.menuCtrl.open();
	 }
	
	 closeMenu() {
	   this.menuCtrl.close();
	 }
	
	 toggleMenu() {
	   this.menuCtrl.toggle();
	}



// Multiple Menus on Different Sides
	<ion-menu side="left" [content]="mycontent">...</ion-menu>
	<ion-menu side="right" [content]="mycontent">...</ion-menu>
	<ion-nav #mycontent [root]="rootPage"></ion-nav>
	
	toggleLeftMenu() {
	  this.menuCtrl.toggle();
	}
	
	toggleRightMenu() {
	  this.menuCtrl.toggle('right');
	  }

	  
//Multiple Menus on the Same Side
	<ion-menu id="authenticated" side="left" [content]="mycontent">...</ion-menu>
	<ion-menu id="unauthenticated" side="left" [content]="mycontent">...</ion-menu>
	<ion-nav #mycontent [root]="rootPage"></ion-nav>
	enableAuthenticatedMenu() {
	  this.menuCtrl.enable(true, 'authenticated');
	  this.menuCtrl.enable(false, 'unauthenticated');
	}


Instance Members

close(menuId)
open(menuId)
enable(menuId)
get(menuId)
getMenus()
getOpen()
isEnabled(menuId)
isOpen(menuId)
swipeEnable(shouldEnable:boolean, menuId)
toggle(menuId)






























