

zhoubingbing
zhoubbmls@sina.com
zhoubbmls

https://www.npmjs.com/~zhoubbmls


commonjs规范
在编译过程中，Node对获取的JavaScript文件 进行头尾包装。{\n js文本 \n};
(functin(require, exports, nmodule, __filename, __firname){
	exports.add = { }
})


AMD -----------------------------------------
define(id?, dependencies?, factory)

define(id?, [ 'dep1', 'dep2' ], function( dep1, dep2 ){
	return obj;
})


CMD -----------------------------------------
define(function(require, exports, module){
	//do something
})



核心模块-将那些油纯C/C++编写的部分统一统称为内建模块 buffer crypto evals fs os 等

本地安装包 指定packjson.json文件夹
npm install <tarball file>
npm install <tarball rul>
npm install <folder>

从非官方安装
npm install underscore --registory="http://registory.url"

指定默认源

npm config set registry http://registry.npmjs.org


setTimeout() 和 setInterver() 与浏览器API是一致的
 
process.nextTick(); 执行优先 setImmediate(); 

setImmediate(); 进入下一轮循环


events -------------------------------------------------

var events = require('events');
var emitter = new events.EventEmitter();

emitter.on('newListener',function(eventname, listener){ }); 当添加新的监听器时，'newListener' 事件会触发
emitter.on('removeListener',function(eventname, listener){ }); 当监听器被移除时,'removeListener' 事件被触发

emitter.emit('error');

emitter.on('some_event',function(){})
emitter.addListener(event, listener) 为指定事件添加一个监听器到监听器数组的尾部
emitter.emit('some_event');

emitter.setMaxListener(n); 设置n上限， 0则取消限制

once(event, listener)
removeListener(event, listener)
removeAllListeners([event])
listeners(event) 返回指定事件的监听器数组。

require('events').EventEmitter.listenerCount(emitter,event)

emit(event, [arg1], [arg2], [...])


EventProxy -------------------------------------------------
var eventproxy = require('EventProxy');

var proxy = new eventproxy.EventProxy();

proxy.all('tempate', 'data', 'resources', function(tempate, data, resources){ })
proxy.tail('tempate', 'data', 'resources', function(tempate, data, resources){ }) //只能执行一次 
proxy.emit('tempate');

proxy.after('data', 10, function(){ }) //执行10次 data 后会执行侦听器










