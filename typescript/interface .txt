
属性接口------------------------------

	interface SquareConfig {
		color?: string; 	// 可选
		width: number;		
	}
	
	function createSquare(config: SquareConfig): any{
	
	}
	// 函数参数必须满足接口 ， 可选除外; 
	// 不允许接口非定义的属性
	let mySquare = createSquare({width: "black"});
	
	
	interface SquareConfig {
		color?: string; 	// 可选
		width: number;
		/*
			允许定义其他属性
			[propName: string]: any;
		*/
	}
		


只读属性------------------------------

	一些对象属性只能在对象刚刚创建的时候修改其值。 你可以在属性名前用 readonly来指定只读属性:
	interface Point {
	    readonly x: number;
	    readonly y: number;
	}
	
	let p1: Point = { x: 10, y: 20 };
	p1.x = 5; // error!
	
	
	
	
	
函数类型------------------------------

interface SearchFunc {
	(source: string, subString: string): boolean;
}

	let mySearch: SearchFunc;
	mySearch = function(source: string, subString: string) {
		let result = source.search(subString);
		return result > -1;
	}
	
		//or
	
	let mySearch = <SearchFunc>function(source: string, subString: string) {
		let result = source.search(subString);
		return result > -1;
	}




可索引的类型------------------------------

interface StringArray {
	[index: number]: string;
}
let myArray: StringArray;
myArray = ["Bob", "Fred"];






































